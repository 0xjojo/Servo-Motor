
ServoMotor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004e6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000053a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000053a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000056c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  000005a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b3b  00000000  00000000  00000670  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000079c  00000000  00000000  000011ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000596  00000000  00000000  00001947  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  00001ee0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000491  00000000  00000000  00002000  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004b8  00000000  00000000  00002491  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00002949  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 3f 00 	call	0x7e	; 0x7e <main>
  64:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_voidInit>:
#include "DIO_config.h"
#include "DIO_private.h"

void DIO_voidInit(void)
{
	DDRA = DIO_U8_DIRA;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	DDRB = DIO_U8_DIRB;
  70:	8e e0       	ldi	r24, 0x0E	; 14
  72:	87 bb       	out	0x17, r24	; 23
	DDRC = DIO_U8_DIRC;
  74:	84 e8       	ldi	r24, 0x84	; 132
  76:	84 bb       	out	0x14, r24	; 20
	DDRD = DIO_U8_DIRD;
  78:	88 e2       	ldi	r24, 0x28	; 40
  7a:	81 bb       	out	0x11, r24	; 17
  7c:	08 95       	ret

0000007e <main>:
#include "TIMER_1_private.h"
#include<util/delay.h>
int main(void)
{
	//TIMER_1_voidInit();
	DIO_voidInit();
  7e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_voidInit>
	ServoMotor_Init();
  82:	0e 94 83 00 	call	0x106	; 0x106 <ServoMotor_Init>
	
	//PWM_1_voidGenerate(12);
	ServoMotor_SetDegree(0);
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	0e 94 88 00 	call	0x110	; 0x110 <ServoMotor_SetDegree>
	//DIO_voidSetPinValue(29 , 1);
    /* Replace with your application code */
	//OCR1A = 97;
    while (1) 
    {
		ServoMotor_SetDegree(0);
  8c:	80 e0       	ldi	r24, 0x00	; 0
  8e:	0e 94 88 00 	call	0x110	; 0x110 <ServoMotor_SetDegree>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	2f ef       	ldi	r18, 0xFF	; 255
  94:	83 ed       	ldi	r24, 0xD3	; 211
  96:	90 e3       	ldi	r25, 0x30	; 48
  98:	21 50       	subi	r18, 0x01	; 1
  9a:	80 40       	sbci	r24, 0x00	; 0
  9c:	90 40       	sbci	r25, 0x00	; 0
  9e:	e1 f7       	brne	.-8      	; 0x98 <main+0x1a>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <main+0x24>
  a2:	00 00       	nop
		_delay_ms(1000);
		ServoMotor_SetDegree(45);
  a4:	8d e2       	ldi	r24, 0x2D	; 45
  a6:	0e 94 88 00 	call	0x110	; 0x110 <ServoMotor_SetDegree>
  aa:	2f ef       	ldi	r18, 0xFF	; 255
  ac:	83 ed       	ldi	r24, 0xD3	; 211
  ae:	90 e3       	ldi	r25, 0x30	; 48
  b0:	21 50       	subi	r18, 0x01	; 1
  b2:	80 40       	sbci	r24, 0x00	; 0
  b4:	90 40       	sbci	r25, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <main+0x32>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x3c>
  ba:	00 00       	nop
		_delay_ms(1000);
		ServoMotor_SetDegree(90);
  bc:	8a e5       	ldi	r24, 0x5A	; 90
  be:	0e 94 88 00 	call	0x110	; 0x110 <ServoMotor_SetDegree>
  c2:	2f ef       	ldi	r18, 0xFF	; 255
  c4:	83 ed       	ldi	r24, 0xD3	; 211
  c6:	90 e3       	ldi	r25, 0x30	; 48
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	90 40       	sbci	r25, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x4a>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x54>
  d2:	00 00       	nop
		_delay_ms(1000);
		ServoMotor_SetDegree(135);
  d4:	87 e8       	ldi	r24, 0x87	; 135
  d6:	0e 94 88 00 	call	0x110	; 0x110 <ServoMotor_SetDegree>
  da:	2f ef       	ldi	r18, 0xFF	; 255
  dc:	83 ed       	ldi	r24, 0xD3	; 211
  de:	90 e3       	ldi	r25, 0x30	; 48
  e0:	21 50       	subi	r18, 0x01	; 1
  e2:	80 40       	sbci	r24, 0x00	; 0
  e4:	90 40       	sbci	r25, 0x00	; 0
  e6:	e1 f7       	brne	.-8      	; 0xe0 <main+0x62>
  e8:	00 c0       	rjmp	.+0      	; 0xea <main+0x6c>
  ea:	00 00       	nop
		_delay_ms(1000);
		ServoMotor_SetDegree(180);
  ec:	84 eb       	ldi	r24, 0xB4	; 180
  ee:	0e 94 88 00 	call	0x110	; 0x110 <ServoMotor_SetDegree>
  f2:	2f ef       	ldi	r18, 0xFF	; 255
  f4:	83 ed       	ldi	r24, 0xD3	; 211
  f6:	90 e3       	ldi	r25, 0x30	; 48
  f8:	21 50       	subi	r18, 0x01	; 1
  fa:	80 40       	sbci	r24, 0x00	; 0
  fc:	90 40       	sbci	r25, 0x00	; 0
  fe:	e1 f7       	brne	.-8      	; 0xf8 <main+0x7a>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x84>
 102:	00 00       	nop
 104:	c3 cf       	rjmp	.-122    	; 0x8c <main+0xe>

00000106 <ServoMotor_Init>:
#include "STD_types.h"
#include "TIMER_1_int.h"
#include "Servo.h"
void ServoMotor_Init(void)
{
	PWM_1_voidInit();
 106:	0e 94 a0 00 	call	0x140	; 0x140 <PWM_1_voidInit>
	PWM_1_voidStart();
 10a:	0e 94 c7 00 	call	0x18e	; 0x18e <PWM_1_voidStart>
 10e:	08 95       	ret

00000110 <ServoMotor_SetDegree>:

void ServoMotor_SetDegree(u8 degree)
{
	u16 duty_cycle = 0;
	
	duty_cycle = 3 + (degree * .05);
 110:	68 2f       	mov	r22, r24
 112:	70 e0       	ldi	r23, 0x00	; 0
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__floatsisf>
 11c:	2d ec       	ldi	r18, 0xCD	; 205
 11e:	3c ec       	ldi	r19, 0xCC	; 204
 120:	4c e4       	ldi	r20, 0x4C	; 76
 122:	5d e3       	ldi	r21, 0x3D	; 61
 124:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__mulsf3>
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	40 e4       	ldi	r20, 0x40	; 64
 12e:	50 e4       	ldi	r21, 0x40	; 64
 130:	0e 94 cc 00 	call	0x198	; 0x198 <__addsf3>
 134:	0e 94 38 01 	call	0x270	; 0x270 <__fixunssfsi>
	
	PWM_1_voidGenerate(duty_cycle);
 138:	cb 01       	movw	r24, r22
 13a:	0e 94 ae 00 	call	0x15c	; 0x15c <PWM_1_voidGenerate>
 13e:	08 95       	ret

00000140 <PWM_1_voidInit>:
		OCR1A = Num_Ticks - 1;
	}
}
void PWM_1_voidInit(void)
{
	DDRD |= 0x20;
 140:	81 b3       	in	r24, 0x11	; 17
 142:	80 62       	ori	r24, 0x20	; 32
 144:	81 bb       	out	0x11, r24	; 17
	TCCR1A |= 0xA2 ;
 146:	8f b5       	in	r24, 0x2f	; 47
 148:	82 6a       	ori	r24, 0xA2	; 162
 14a:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= 0x18 ;
 14c:	8e b5       	in	r24, 0x2e	; 46
 14e:	88 61       	ori	r24, 0x18	; 24
 150:	8e bd       	out	0x2e, r24	; 46
	ICR1 = 1250 ;
 152:	82 ee       	ldi	r24, 0xE2	; 226
 154:	94 e0       	ldi	r25, 0x04	; 4
 156:	97 bd       	out	0x27, r25	; 39
 158:	86 bd       	out	0x26, r24	; 38
 15a:	08 95       	ret

0000015c <PWM_1_voidGenerate>:
}

void PWM_1_voidGenerate(u16 duty_cycle)
{
	OCR1A = ((duty_cycle * 1250)/100) - 1;
 15c:	42 ee       	ldi	r20, 0xE2	; 226
 15e:	54 e0       	ldi	r21, 0x04	; 4
 160:	9c 01       	movw	r18, r24
 162:	24 9f       	mul	r18, r20
 164:	c0 01       	movw	r24, r0
 166:	25 9f       	mul	r18, r21
 168:	90 0d       	add	r25, r0
 16a:	34 9f       	mul	r19, r20
 16c:	90 0d       	add	r25, r0
 16e:	11 24       	eor	r1, r1
 170:	9c 01       	movw	r18, r24
 172:	36 95       	lsr	r19
 174:	27 95       	ror	r18
 176:	36 95       	lsr	r19
 178:	27 95       	ror	r18
 17a:	ab e7       	ldi	r26, 0x7B	; 123
 17c:	b4 e1       	ldi	r27, 0x14	; 20
 17e:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__umulhisi3>
 182:	96 95       	lsr	r25
 184:	87 95       	ror	r24
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	9b bd       	out	0x2b, r25	; 43
 18a:	8a bd       	out	0x2a, r24	; 42
 18c:	08 95       	ret

0000018e <PWM_1_voidStart>:
}

void PWM_1_voidStart(void)
{
	TCCR1B |= 0x04 ;
 18e:	8e b5       	in	r24, 0x2e	; 46
 190:	84 60       	ori	r24, 0x04	; 4
 192:	8e bd       	out	0x2e, r24	; 46
 194:	08 95       	ret

00000196 <__subsf3>:
 196:	50 58       	subi	r21, 0x80	; 128

00000198 <__addsf3>:
 198:	bb 27       	eor	r27, r27
 19a:	aa 27       	eor	r26, r26
 19c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <__addsf3x>
 1a0:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_round>
 1a4:	0e 94 ad 01 	call	0x35a	; 0x35a <__fp_pscA>
 1a8:	38 f0       	brcs	.+14     	; 0x1b8 <__addsf3+0x20>
 1aa:	0e 94 b4 01 	call	0x368	; 0x368 <__fp_pscB>
 1ae:	20 f0       	brcs	.+8      	; 0x1b8 <__addsf3+0x20>
 1b0:	39 f4       	brne	.+14     	; 0x1c0 <__addsf3+0x28>
 1b2:	9f 3f       	cpi	r25, 0xFF	; 255
 1b4:	19 f4       	brne	.+6      	; 0x1bc <__addsf3+0x24>
 1b6:	26 f4       	brtc	.+8      	; 0x1c0 <__addsf3+0x28>
 1b8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__fp_nan>
 1bc:	0e f4       	brtc	.+2      	; 0x1c0 <__addsf3+0x28>
 1be:	e0 95       	com	r30
 1c0:	e7 fb       	bst	r30, 7
 1c2:	0c 94 a4 01 	jmp	0x348	; 0x348 <__fp_inf>

000001c6 <__addsf3x>:
 1c6:	e9 2f       	mov	r30, r25
 1c8:	0e 94 cc 01 	call	0x398	; 0x398 <__fp_split3>
 1cc:	58 f3       	brcs	.-42     	; 0x1a4 <__addsf3+0xc>
 1ce:	ba 17       	cp	r27, r26
 1d0:	62 07       	cpc	r22, r18
 1d2:	73 07       	cpc	r23, r19
 1d4:	84 07       	cpc	r24, r20
 1d6:	95 07       	cpc	r25, r21
 1d8:	20 f0       	brcs	.+8      	; 0x1e2 <__addsf3x+0x1c>
 1da:	79 f4       	brne	.+30     	; 0x1fa <__addsf3x+0x34>
 1dc:	a6 f5       	brtc	.+104    	; 0x246 <__addsf3x+0x80>
 1de:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_zero>
 1e2:	0e f4       	brtc	.+2      	; 0x1e6 <__addsf3x+0x20>
 1e4:	e0 95       	com	r30
 1e6:	0b 2e       	mov	r0, r27
 1e8:	ba 2f       	mov	r27, r26
 1ea:	a0 2d       	mov	r26, r0
 1ec:	0b 01       	movw	r0, r22
 1ee:	b9 01       	movw	r22, r18
 1f0:	90 01       	movw	r18, r0
 1f2:	0c 01       	movw	r0, r24
 1f4:	ca 01       	movw	r24, r20
 1f6:	a0 01       	movw	r20, r0
 1f8:	11 24       	eor	r1, r1
 1fa:	ff 27       	eor	r31, r31
 1fc:	59 1b       	sub	r21, r25
 1fe:	99 f0       	breq	.+38     	; 0x226 <__addsf3x+0x60>
 200:	59 3f       	cpi	r21, 0xF9	; 249
 202:	50 f4       	brcc	.+20     	; 0x218 <__addsf3x+0x52>
 204:	50 3e       	cpi	r21, 0xE0	; 224
 206:	68 f1       	brcs	.+90     	; 0x262 <__addsf3x+0x9c>
 208:	1a 16       	cp	r1, r26
 20a:	f0 40       	sbci	r31, 0x00	; 0
 20c:	a2 2f       	mov	r26, r18
 20e:	23 2f       	mov	r18, r19
 210:	34 2f       	mov	r19, r20
 212:	44 27       	eor	r20, r20
 214:	58 5f       	subi	r21, 0xF8	; 248
 216:	f3 cf       	rjmp	.-26     	; 0x1fe <__addsf3x+0x38>
 218:	46 95       	lsr	r20
 21a:	37 95       	ror	r19
 21c:	27 95       	ror	r18
 21e:	a7 95       	ror	r26
 220:	f0 40       	sbci	r31, 0x00	; 0
 222:	53 95       	inc	r21
 224:	c9 f7       	brne	.-14     	; 0x218 <__addsf3x+0x52>
 226:	7e f4       	brtc	.+30     	; 0x246 <__addsf3x+0x80>
 228:	1f 16       	cp	r1, r31
 22a:	ba 0b       	sbc	r27, r26
 22c:	62 0b       	sbc	r22, r18
 22e:	73 0b       	sbc	r23, r19
 230:	84 0b       	sbc	r24, r20
 232:	ba f0       	brmi	.+46     	; 0x262 <__addsf3x+0x9c>
 234:	91 50       	subi	r25, 0x01	; 1
 236:	a1 f0       	breq	.+40     	; 0x260 <__addsf3x+0x9a>
 238:	ff 0f       	add	r31, r31
 23a:	bb 1f       	adc	r27, r27
 23c:	66 1f       	adc	r22, r22
 23e:	77 1f       	adc	r23, r23
 240:	88 1f       	adc	r24, r24
 242:	c2 f7       	brpl	.-16     	; 0x234 <__addsf3x+0x6e>
 244:	0e c0       	rjmp	.+28     	; 0x262 <__addsf3x+0x9c>
 246:	ba 0f       	add	r27, r26
 248:	62 1f       	adc	r22, r18
 24a:	73 1f       	adc	r23, r19
 24c:	84 1f       	adc	r24, r20
 24e:	48 f4       	brcc	.+18     	; 0x262 <__addsf3x+0x9c>
 250:	87 95       	ror	r24
 252:	77 95       	ror	r23
 254:	67 95       	ror	r22
 256:	b7 95       	ror	r27
 258:	f7 95       	ror	r31
 25a:	9e 3f       	cpi	r25, 0xFE	; 254
 25c:	08 f0       	brcs	.+2      	; 0x260 <__addsf3x+0x9a>
 25e:	b0 cf       	rjmp	.-160    	; 0x1c0 <__addsf3+0x28>
 260:	93 95       	inc	r25
 262:	88 0f       	add	r24, r24
 264:	08 f0       	brcs	.+2      	; 0x268 <__addsf3x+0xa2>
 266:	99 27       	eor	r25, r25
 268:	ee 0f       	add	r30, r30
 26a:	97 95       	ror	r25
 26c:	87 95       	ror	r24
 26e:	08 95       	ret

00000270 <__fixunssfsi>:
 270:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__fp_splitA>
 274:	88 f0       	brcs	.+34     	; 0x298 <__fixunssfsi+0x28>
 276:	9f 57       	subi	r25, 0x7F	; 127
 278:	98 f0       	brcs	.+38     	; 0x2a0 <__fixunssfsi+0x30>
 27a:	b9 2f       	mov	r27, r25
 27c:	99 27       	eor	r25, r25
 27e:	b7 51       	subi	r27, 0x17	; 23
 280:	b0 f0       	brcs	.+44     	; 0x2ae <__fixunssfsi+0x3e>
 282:	e1 f0       	breq	.+56     	; 0x2bc <__fixunssfsi+0x4c>
 284:	66 0f       	add	r22, r22
 286:	77 1f       	adc	r23, r23
 288:	88 1f       	adc	r24, r24
 28a:	99 1f       	adc	r25, r25
 28c:	1a f0       	brmi	.+6      	; 0x294 <__fixunssfsi+0x24>
 28e:	ba 95       	dec	r27
 290:	c9 f7       	brne	.-14     	; 0x284 <__fixunssfsi+0x14>
 292:	14 c0       	rjmp	.+40     	; 0x2bc <__fixunssfsi+0x4c>
 294:	b1 30       	cpi	r27, 0x01	; 1
 296:	91 f0       	breq	.+36     	; 0x2bc <__fixunssfsi+0x4c>
 298:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fp_zero>
 29c:	b1 e0       	ldi	r27, 0x01	; 1
 29e:	08 95       	ret
 2a0:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_zero>
 2a4:	67 2f       	mov	r22, r23
 2a6:	78 2f       	mov	r23, r24
 2a8:	88 27       	eor	r24, r24
 2aa:	b8 5f       	subi	r27, 0xF8	; 248
 2ac:	39 f0       	breq	.+14     	; 0x2bc <__fixunssfsi+0x4c>
 2ae:	b9 3f       	cpi	r27, 0xF9	; 249
 2b0:	cc f3       	brlt	.-14     	; 0x2a4 <__fixunssfsi+0x34>
 2b2:	86 95       	lsr	r24
 2b4:	77 95       	ror	r23
 2b6:	67 95       	ror	r22
 2b8:	b3 95       	inc	r27
 2ba:	d9 f7       	brne	.-10     	; 0x2b2 <__fixunssfsi+0x42>
 2bc:	3e f4       	brtc	.+14     	; 0x2cc <__fixunssfsi+0x5c>
 2be:	90 95       	com	r25
 2c0:	80 95       	com	r24
 2c2:	70 95       	com	r23
 2c4:	61 95       	neg	r22
 2c6:	7f 4f       	sbci	r23, 0xFF	; 255
 2c8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ca:	9f 4f       	sbci	r25, 0xFF	; 255
 2cc:	08 95       	ret

000002ce <__floatunsisf>:
 2ce:	e8 94       	clt
 2d0:	09 c0       	rjmp	.+18     	; 0x2e4 <__floatsisf+0x12>

000002d2 <__floatsisf>:
 2d2:	97 fb       	bst	r25, 7
 2d4:	3e f4       	brtc	.+14     	; 0x2e4 <__floatsisf+0x12>
 2d6:	90 95       	com	r25
 2d8:	80 95       	com	r24
 2da:	70 95       	com	r23
 2dc:	61 95       	neg	r22
 2de:	7f 4f       	sbci	r23, 0xFF	; 255
 2e0:	8f 4f       	sbci	r24, 0xFF	; 255
 2e2:	9f 4f       	sbci	r25, 0xFF	; 255
 2e4:	99 23       	and	r25, r25
 2e6:	a9 f0       	breq	.+42     	; 0x312 <__floatsisf+0x40>
 2e8:	f9 2f       	mov	r31, r25
 2ea:	96 e9       	ldi	r25, 0x96	; 150
 2ec:	bb 27       	eor	r27, r27
 2ee:	93 95       	inc	r25
 2f0:	f6 95       	lsr	r31
 2f2:	87 95       	ror	r24
 2f4:	77 95       	ror	r23
 2f6:	67 95       	ror	r22
 2f8:	b7 95       	ror	r27
 2fa:	f1 11       	cpse	r31, r1
 2fc:	f8 cf       	rjmp	.-16     	; 0x2ee <__floatsisf+0x1c>
 2fe:	fa f4       	brpl	.+62     	; 0x33e <__floatsisf+0x6c>
 300:	bb 0f       	add	r27, r27
 302:	11 f4       	brne	.+4      	; 0x308 <__floatsisf+0x36>
 304:	60 ff       	sbrs	r22, 0
 306:	1b c0       	rjmp	.+54     	; 0x33e <__floatsisf+0x6c>
 308:	6f 5f       	subi	r22, 0xFF	; 255
 30a:	7f 4f       	sbci	r23, 0xFF	; 255
 30c:	8f 4f       	sbci	r24, 0xFF	; 255
 30e:	9f 4f       	sbci	r25, 0xFF	; 255
 310:	16 c0       	rjmp	.+44     	; 0x33e <__floatsisf+0x6c>
 312:	88 23       	and	r24, r24
 314:	11 f0       	breq	.+4      	; 0x31a <__floatsisf+0x48>
 316:	96 e9       	ldi	r25, 0x96	; 150
 318:	11 c0       	rjmp	.+34     	; 0x33c <__floatsisf+0x6a>
 31a:	77 23       	and	r23, r23
 31c:	21 f0       	breq	.+8      	; 0x326 <__floatsisf+0x54>
 31e:	9e e8       	ldi	r25, 0x8E	; 142
 320:	87 2f       	mov	r24, r23
 322:	76 2f       	mov	r23, r22
 324:	05 c0       	rjmp	.+10     	; 0x330 <__floatsisf+0x5e>
 326:	66 23       	and	r22, r22
 328:	71 f0       	breq	.+28     	; 0x346 <__floatsisf+0x74>
 32a:	96 e8       	ldi	r25, 0x86	; 134
 32c:	86 2f       	mov	r24, r22
 32e:	70 e0       	ldi	r23, 0x00	; 0
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	2a f0       	brmi	.+10     	; 0x33e <__floatsisf+0x6c>
 334:	9a 95       	dec	r25
 336:	66 0f       	add	r22, r22
 338:	77 1f       	adc	r23, r23
 33a:	88 1f       	adc	r24, r24
 33c:	da f7       	brpl	.-10     	; 0x334 <__floatsisf+0x62>
 33e:	88 0f       	add	r24, r24
 340:	96 95       	lsr	r25
 342:	87 95       	ror	r24
 344:	97 f9       	bld	r25, 7
 346:	08 95       	ret

00000348 <__fp_inf>:
 348:	97 f9       	bld	r25, 7
 34a:	9f 67       	ori	r25, 0x7F	; 127
 34c:	80 e8       	ldi	r24, 0x80	; 128
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	60 e0       	ldi	r22, 0x00	; 0
 352:	08 95       	ret

00000354 <__fp_nan>:
 354:	9f ef       	ldi	r25, 0xFF	; 255
 356:	80 ec       	ldi	r24, 0xC0	; 192
 358:	08 95       	ret

0000035a <__fp_pscA>:
 35a:	00 24       	eor	r0, r0
 35c:	0a 94       	dec	r0
 35e:	16 16       	cp	r1, r22
 360:	17 06       	cpc	r1, r23
 362:	18 06       	cpc	r1, r24
 364:	09 06       	cpc	r0, r25
 366:	08 95       	ret

00000368 <__fp_pscB>:
 368:	00 24       	eor	r0, r0
 36a:	0a 94       	dec	r0
 36c:	12 16       	cp	r1, r18
 36e:	13 06       	cpc	r1, r19
 370:	14 06       	cpc	r1, r20
 372:	05 06       	cpc	r0, r21
 374:	08 95       	ret

00000376 <__fp_round>:
 376:	09 2e       	mov	r0, r25
 378:	03 94       	inc	r0
 37a:	00 0c       	add	r0, r0
 37c:	11 f4       	brne	.+4      	; 0x382 <__fp_round+0xc>
 37e:	88 23       	and	r24, r24
 380:	52 f0       	brmi	.+20     	; 0x396 <__fp_round+0x20>
 382:	bb 0f       	add	r27, r27
 384:	40 f4       	brcc	.+16     	; 0x396 <__fp_round+0x20>
 386:	bf 2b       	or	r27, r31
 388:	11 f4       	brne	.+4      	; 0x38e <__fp_round+0x18>
 38a:	60 ff       	sbrs	r22, 0
 38c:	04 c0       	rjmp	.+8      	; 0x396 <__fp_round+0x20>
 38e:	6f 5f       	subi	r22, 0xFF	; 255
 390:	7f 4f       	sbci	r23, 0xFF	; 255
 392:	8f 4f       	sbci	r24, 0xFF	; 255
 394:	9f 4f       	sbci	r25, 0xFF	; 255
 396:	08 95       	ret

00000398 <__fp_split3>:
 398:	57 fd       	sbrc	r21, 7
 39a:	90 58       	subi	r25, 0x80	; 128
 39c:	44 0f       	add	r20, r20
 39e:	55 1f       	adc	r21, r21
 3a0:	59 f0       	breq	.+22     	; 0x3b8 <__fp_splitA+0x10>
 3a2:	5f 3f       	cpi	r21, 0xFF	; 255
 3a4:	71 f0       	breq	.+28     	; 0x3c2 <__fp_splitA+0x1a>
 3a6:	47 95       	ror	r20

000003a8 <__fp_splitA>:
 3a8:	88 0f       	add	r24, r24
 3aa:	97 fb       	bst	r25, 7
 3ac:	99 1f       	adc	r25, r25
 3ae:	61 f0       	breq	.+24     	; 0x3c8 <__fp_splitA+0x20>
 3b0:	9f 3f       	cpi	r25, 0xFF	; 255
 3b2:	79 f0       	breq	.+30     	; 0x3d2 <__fp_splitA+0x2a>
 3b4:	87 95       	ror	r24
 3b6:	08 95       	ret
 3b8:	12 16       	cp	r1, r18
 3ba:	13 06       	cpc	r1, r19
 3bc:	14 06       	cpc	r1, r20
 3be:	55 1f       	adc	r21, r21
 3c0:	f2 cf       	rjmp	.-28     	; 0x3a6 <__fp_split3+0xe>
 3c2:	46 95       	lsr	r20
 3c4:	f1 df       	rcall	.-30     	; 0x3a8 <__fp_splitA>
 3c6:	08 c0       	rjmp	.+16     	; 0x3d8 <__fp_splitA+0x30>
 3c8:	16 16       	cp	r1, r22
 3ca:	17 06       	cpc	r1, r23
 3cc:	18 06       	cpc	r1, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	f1 cf       	rjmp	.-30     	; 0x3b4 <__fp_splitA+0xc>
 3d2:	86 95       	lsr	r24
 3d4:	71 05       	cpc	r23, r1
 3d6:	61 05       	cpc	r22, r1
 3d8:	08 94       	sec
 3da:	08 95       	ret

000003dc <__fp_zero>:
 3dc:	e8 94       	clt

000003de <__fp_szero>:
 3de:	bb 27       	eor	r27, r27
 3e0:	66 27       	eor	r22, r22
 3e2:	77 27       	eor	r23, r23
 3e4:	cb 01       	movw	r24, r22
 3e6:	97 f9       	bld	r25, 7
 3e8:	08 95       	ret

000003ea <__mulsf3>:
 3ea:	0e 94 08 02 	call	0x410	; 0x410 <__mulsf3x>
 3ee:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_round>
 3f2:	0e 94 ad 01 	call	0x35a	; 0x35a <__fp_pscA>
 3f6:	38 f0       	brcs	.+14     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f8:	0e 94 b4 01 	call	0x368	; 0x368 <__fp_pscB>
 3fc:	20 f0       	brcs	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fe:	95 23       	and	r25, r21
 400:	11 f0       	breq	.+4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 402:	0c 94 a4 01 	jmp	0x348	; 0x348 <__fp_inf>
 406:	0c 94 aa 01 	jmp	0x354	; 0x354 <__fp_nan>
 40a:	11 24       	eor	r1, r1
 40c:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__fp_szero>

00000410 <__mulsf3x>:
 410:	0e 94 cc 01 	call	0x398	; 0x398 <__fp_split3>
 414:	70 f3       	brcs	.-36     	; 0x3f2 <__mulsf3+0x8>

00000416 <__mulsf3_pse>:
 416:	95 9f       	mul	r25, r21
 418:	c1 f3       	breq	.-16     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 41a:	95 0f       	add	r25, r21
 41c:	50 e0       	ldi	r21, 0x00	; 0
 41e:	55 1f       	adc	r21, r21
 420:	62 9f       	mul	r22, r18
 422:	f0 01       	movw	r30, r0
 424:	72 9f       	mul	r23, r18
 426:	bb 27       	eor	r27, r27
 428:	f0 0d       	add	r31, r0
 42a:	b1 1d       	adc	r27, r1
 42c:	63 9f       	mul	r22, r19
 42e:	aa 27       	eor	r26, r26
 430:	f0 0d       	add	r31, r0
 432:	b1 1d       	adc	r27, r1
 434:	aa 1f       	adc	r26, r26
 436:	64 9f       	mul	r22, r20
 438:	66 27       	eor	r22, r22
 43a:	b0 0d       	add	r27, r0
 43c:	a1 1d       	adc	r26, r1
 43e:	66 1f       	adc	r22, r22
 440:	82 9f       	mul	r24, r18
 442:	22 27       	eor	r18, r18
 444:	b0 0d       	add	r27, r0
 446:	a1 1d       	adc	r26, r1
 448:	62 1f       	adc	r22, r18
 44a:	73 9f       	mul	r23, r19
 44c:	b0 0d       	add	r27, r0
 44e:	a1 1d       	adc	r26, r1
 450:	62 1f       	adc	r22, r18
 452:	83 9f       	mul	r24, r19
 454:	a0 0d       	add	r26, r0
 456:	61 1d       	adc	r22, r1
 458:	22 1f       	adc	r18, r18
 45a:	74 9f       	mul	r23, r20
 45c:	33 27       	eor	r19, r19
 45e:	a0 0d       	add	r26, r0
 460:	61 1d       	adc	r22, r1
 462:	23 1f       	adc	r18, r19
 464:	84 9f       	mul	r24, r20
 466:	60 0d       	add	r22, r0
 468:	21 1d       	adc	r18, r1
 46a:	82 2f       	mov	r24, r18
 46c:	76 2f       	mov	r23, r22
 46e:	6a 2f       	mov	r22, r26
 470:	11 24       	eor	r1, r1
 472:	9f 57       	subi	r25, 0x7F	; 127
 474:	50 40       	sbci	r21, 0x00	; 0
 476:	9a f0       	brmi	.+38     	; 0x49e <__mulsf3_pse+0x88>
 478:	f1 f0       	breq	.+60     	; 0x4b6 <__mulsf3_pse+0xa0>
 47a:	88 23       	and	r24, r24
 47c:	4a f0       	brmi	.+18     	; 0x490 <__mulsf3_pse+0x7a>
 47e:	ee 0f       	add	r30, r30
 480:	ff 1f       	adc	r31, r31
 482:	bb 1f       	adc	r27, r27
 484:	66 1f       	adc	r22, r22
 486:	77 1f       	adc	r23, r23
 488:	88 1f       	adc	r24, r24
 48a:	91 50       	subi	r25, 0x01	; 1
 48c:	50 40       	sbci	r21, 0x00	; 0
 48e:	a9 f7       	brne	.-22     	; 0x47a <__mulsf3_pse+0x64>
 490:	9e 3f       	cpi	r25, 0xFE	; 254
 492:	51 05       	cpc	r21, r1
 494:	80 f0       	brcs	.+32     	; 0x4b6 <__mulsf3_pse+0xa0>
 496:	0c 94 a4 01 	jmp	0x348	; 0x348 <__fp_inf>
 49a:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__fp_szero>
 49e:	5f 3f       	cpi	r21, 0xFF	; 255
 4a0:	e4 f3       	brlt	.-8      	; 0x49a <__mulsf3_pse+0x84>
 4a2:	98 3e       	cpi	r25, 0xE8	; 232
 4a4:	d4 f3       	brlt	.-12     	; 0x49a <__mulsf3_pse+0x84>
 4a6:	86 95       	lsr	r24
 4a8:	77 95       	ror	r23
 4aa:	67 95       	ror	r22
 4ac:	b7 95       	ror	r27
 4ae:	f7 95       	ror	r31
 4b0:	e7 95       	ror	r30
 4b2:	9f 5f       	subi	r25, 0xFF	; 255
 4b4:	c1 f7       	brne	.-16     	; 0x4a6 <__mulsf3_pse+0x90>
 4b6:	fe 2b       	or	r31, r30
 4b8:	88 0f       	add	r24, r24
 4ba:	91 1d       	adc	r25, r1
 4bc:	96 95       	lsr	r25
 4be:	87 95       	ror	r24
 4c0:	97 f9       	bld	r25, 7
 4c2:	08 95       	ret

000004c4 <__umulhisi3>:
 4c4:	a2 9f       	mul	r26, r18
 4c6:	b0 01       	movw	r22, r0
 4c8:	b3 9f       	mul	r27, r19
 4ca:	c0 01       	movw	r24, r0
 4cc:	a3 9f       	mul	r26, r19
 4ce:	70 0d       	add	r23, r0
 4d0:	81 1d       	adc	r24, r1
 4d2:	11 24       	eor	r1, r1
 4d4:	91 1d       	adc	r25, r1
 4d6:	b2 9f       	mul	r27, r18
 4d8:	70 0d       	add	r23, r0
 4da:	81 1d       	adc	r24, r1
 4dc:	11 24       	eor	r1, r1
 4de:	91 1d       	adc	r25, r1
 4e0:	08 95       	ret

000004e2 <_exit>:
 4e2:	f8 94       	cli

000004e4 <__stop_program>:
 4e4:	ff cf       	rjmp	.-2      	; 0x4e4 <__stop_program>
